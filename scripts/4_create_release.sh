#!/bin/bash

# ==============================================================================
# 4_create_release.sh
#
# 功能:
#   1. 从环境变量获取文件名，使其更具灵活性。
#   2. 使用 xz 对 rootfs 镜像进行高效压缩，以获得更好的压缩率。
#   3. 创建一个带有动态信息的 GitHub Release。
#   4. 将压缩后的 rootfs 和 ESP 镜像作为资产上传。
#
# 作者: Your Name (Generated by an expert AI)
# 版本: 2.0.0
# ==============================================================================

set -e
set -u
set -o pipefail

# --- 配置变量 (从环境变量读取，如果未设置则使用默认值) ---
echo "INFO: Reading configuration from environment variables..."
# 在 GitHub Actions 中，这些变量应由 workflow 文件传入
ROOTFS_FILENAME="${ROOTFS_NAME:-fedora-42-nabu-rootfs.img}"
ESP_FILENAME="${ESP_NAME:-esp.img}"

# --- 路径定义 ---
ARTIFACTS_DIR="artifacts"
ROOTFS_PATH="${ARTIFACTS_DIR}/rootfs-artifact/${ROOTFS_FILENAME}"
ESP_PATH="${ARTIFACTS_DIR}/esp-artifact/${ESP_FILENAME}"

# 输出的压缩文件名将是原始文件名加上 .xz 后缀
ROOTFS_COMPRESSED_PATH="${ROOTFS_PATH}.xz"

# --- 脚本主逻辑 ---

# 1. 检查原始文件是否存在
echo "INFO: Verifying presence of artifact files..."
if [ ! -f "$ROOTFS_PATH" ]; then
    echo "ERROR: Rootfs artifact not found at '$ROOTFS_PATH'!"
    exit 1
fi
if [ ! -f "$ESP_PATH" ]; then
    echo "ERROR: ESP artifact not found at '$ESP_PATH'!"
    exit 1
fi
echo "INFO: All artifact files found."

# 2. 将 rootfs img 文件高效压缩为 .xz
# 使用 xz 代替 tar.gz，因为对于单个大文件，它的压缩率通常更高。
# -T0: 使用所有可用的 CPU 核心进行多线程压缩，大大加快速度。
# -v: 显示进度。
echo "INFO: Compressing '${ROOTFS_PATH}' using xz with multi-threading..."
xz -T0 -v "$ROOTFS_PATH"
echo "INFO: Compression successful. Output: '${ROOTFS_COMPRESSED_PATH}'"

# 3. 检查压缩文件是否存在
if [ ! -f "$ROOTFS_COMPRESSED_PATH" ]; then
    echo "ERROR: Compressed rootfs file was not created!"
    exit 1
fi

# 4. 准备创建 Release
TAG="fedora-nabu-$(date +'%Y%m%d-%H%M')"
RELEASE_TITLE="Fedora 42 for Mi Pad 5 (nabu) - ${TAG}"

# 生成更丰富的发布说明
# GITHUB_SERVER_URL, GITHUB_REPOSITORY, 和 GITHUB_SHA 由 GitHub Actions 自动提供
COMMIT_URL="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY:-your/repo}/commit/${GITHUB_SHA:-HEAD}"
RELEASE_NOTES=$(cat <<-EOF
Automated build of Fedora 42 for Xiaomi Pad 5 (nabu).

**Assets:**
- \`${ROOTFS_FILENAME}.xz\`: The compressed rootfs image. Decompress before use.
- \`${ESP_FILENAME}\`: The bootable ESP (EFI System Partition) image.

This build was triggered by commit: [${GITHUB_SHA:0:7}](${COMMIT_URL})
EOF
)

# 5. 创建 Release 并上传资产
echo "INFO: Creating GitHub release '${TAG}'..."
gh release create "$TAG" \
    --title "$RELEASE_TITLE" \
    --notes "$RELEASE_NOTES" \
    "$ROOTFS_COMPRESSED_PATH" \
    "$ESP_PATH"

echo "SUCCESS: Release ${TAG} created successfully with assets."