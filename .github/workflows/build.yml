name: Build and Release Nabu Fedora Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install Dependencies
        run: |
          dnf update -y  
          dnf install -y \
            sudo \
            e2fsprogs \
            dosfstools \
            libguestfs-tools \
            rpm-build \
            rpm-sign \
            cpio \
            mtools \
            systemd-container \
            qemu-user-static \
            zip \
            findutils \
            util-linux \
            rsync

      - name: Run build script
        run: |
          cp ./scripts/build-nabu-images.sh ./build-nabu-images.sh
          chmod +x ./build-nabu-images.sh
          ./build-nabu-images.sh

      - name: Prepare Artifacts for Release
        id: prepare_artifacts
        run: |
          TIMESTAMP=$(date +%Y%m%d)
          ROOTFS_IMG="fedora-nabu-rootfs-${TIMESTAMP}.img"
          ESP_IMG="nabu-esp-${TIMESTAMP}.img"
          ROOTFS_ARCHIVE="fedora-nabu-rootfs-${TIMESTAMP}.tar.gz"
          
          echo "Compressing ${ROOTFS_IMG} to ${ROOTFS_ARCHIVE}..."
          tar -czf ${ROOTFS_ARCHIVE} ${ROOTFS_IMG}
          
          # 设置输出变量，供后续步骤使用
          echo "ROOTFS_ARCHIVE_NAME=${ROOTFS_ARCHIVE}" >> $GITHUB_OUTPUT
          echo "ESP_IMG_NAME=${ESP_IMG}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: build-${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          body: |
            Automated build of nabu-fedora images.
          draft: false
          prerelease: false

      - name: Upload Rootfs Asset (tar.gz)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.prepare_artifacts.outputs.ROOTFS_ARCHIVE_NAME }}
          asset_name: ${{ steps.prepare_artifacts.outputs.ROOTFS_ARCHIVE_NAME }}
          asset_content_type: application/gzip

      - name: Upload ESP Asset (.img)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.prepare_artifacts.outputs.ESP_IMG_NAME }}
          asset_name: ${{ steps.prepare_artifacts.outputs.ESP_IMG_NAME }}
          asset_content_type: application/octet-stream