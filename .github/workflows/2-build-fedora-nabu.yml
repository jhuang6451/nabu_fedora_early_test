name: '2. Build Fedora for Nabu'

on:
  workflow_dispatch: # 允许手动触发

permissions:
  contents: write # 为了创建 Release

env:
  CONTAINER_IMAGE: ghcr.io/${{ github.repository_owner }}/fedora-nabu-builder:42
  ROOTFS_NAME: fedora-42-nabu-rootfs.img
  ESP_NAME: esp.img

jobs:
  # ==============================================================================
  # 新增作业：在宿主机上配置 QEMU
  # 这个作业不使用容器，它的唯一目的是准备好 runner 的内核环境。
  # ==============================================================================
  setup_runner:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU for cross-architecture execution
        uses: docker/setup-qemu-action@v3

  # ==============================================================================
  # 修改后的作业：在容器内进行构建
  # 它依赖 setup_runner 作业，确保在宿主机配置完成后再开始。
  # ==============================================================================
  create_rootfs_and_esp:
    runs-on: ubuntu-latest
    needs: setup_runner # 关键：依赖 setup_runner 作业
    container:
      image: ghcr.io/${{ github.repository_owner }}/fedora-nabu-builder:42
      options: --privileged
    steps:
      # 这里不再需要 setup-qemu-action
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create aarch64 rootfs
        run: |
          cp ./scripts/2_create_rootfs.sh ./2_create_rootfs.sh
          chmod +x 2_create_rootfs.sh
          ./2_create_rootfs.sh

      - name: Create ESP image
        run: |
          cp ./scripts/3_create_esp.sh ./3_create_esp.sh
          chmod +x 3_create_esp.sh
          ./3_create_esp.sh

      - name: Upload rootfs artifact
        uses: actions/upload-artifact@v4
        with:
          name: rootfs-artifact
          path: ./${{ env.ROOTFS_NAME }}

      - name: Upload ESP image artifact
        uses: actions/upload-artifact@v4
        with:
          name: esp-artifact
          path: ./${{ env.ESP_NAME }}

  # ... (create_release 作业保持不变, 它会正确地等待 create_rootfs_and_esp 完成) ...
  create_release:
    runs-on: ubuntu-latest
    needs: create_rootfs_and_esp
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release and Upload Assets
        run: |
          cp ./scripts/4_create_release.sh ./4_create_release.sh
          chmod +x 4_create_release.sh
          ./4_create_release.sh
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}